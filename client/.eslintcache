[{"E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\index.js":"1","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\App.js":"2","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\styles.js":"3","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\socket\\CuteClientIOProvider.js":"4","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\socket\\DemoComponent\\DemoSocket.js":"5","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\redux\\actions\\user.js":"6","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\redux\\reducers\\index.js":"7","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\pages\\index.js":"8","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\api\\auth.js":"9","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\components\\Navbar\\Navbar.js":"10","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\socket\\CuteClientIO.js":"11","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\redux\\actionTypes.js":"12","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\redux\\reducers\\auth.js":"13","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\redux\\reducers\\user.js":"14","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\api\\index.js":"15","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\components\\Navbar\\styles.js":"16","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\redux\\actions\\auth.js":"17","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\api\\userStatus.js":"18","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\pages\\LoginPage\\LoginPage.js":"19","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\pages\\RegisterPage\\RegisterPage.js":"20","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\pages\\HomePage\\HomePage.js":"21","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\components\\Navbar\\NotificationList\\NotificationList.js":"22","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\pages\\HomePage\\styles.js":"23","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\pages\\RegisterPage\\styles.js":"24","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\constants\\colors.js":"25","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\constants\\config.js":"26","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\utils\\responsiveQuery.js":"27","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\utils\\userStatus.js":"28"},{"size":1204,"mtime":1633336266164,"results":"29","hashOfConfig":"30"},{"size":6233,"mtime":1633344264845,"results":"31","hashOfConfig":"30"},{"size":126,"mtime":1632931094524,"results":"32","hashOfConfig":"30"},{"size":931,"mtime":1632931094523,"results":"33","hashOfConfig":"30"},{"size":1563,"mtime":1632931094523,"results":"34","hashOfConfig":"30"},{"size":2755,"mtime":1633164545241,"results":"35","hashOfConfig":"30"},{"size":391,"mtime":1633335981227,"results":"36","hashOfConfig":"30"},{"size":1988,"mtime":1633191731536,"results":"37","hashOfConfig":"30"},{"size":783,"mtime":1632931094506,"results":"38","hashOfConfig":"30"},{"size":13597,"mtime":1633190525302,"results":"39","hashOfConfig":"30"},{"size":5343,"mtime":1632931094523,"results":"40","hashOfConfig":"30"},{"size":1361,"mtime":1632931094520,"results":"41","hashOfConfig":"30"},{"size":925,"mtime":1632931094522,"results":"42","hashOfConfig":"30"},{"size":699,"mtime":1632931094522,"results":"43","hashOfConfig":"30"},{"size":376,"mtime":1632931094506,"results":"44","hashOfConfig":"30"},{"size":597,"mtime":1632931094510,"results":"45","hashOfConfig":"30"},{"size":2497,"mtime":1632931094521,"results":"46","hashOfConfig":"30"},{"size":320,"mtime":1632931094507,"results":"47","hashOfConfig":"30"},{"size":9727,"mtime":1633189724576,"results":"48","hashOfConfig":"30"},{"size":11511,"mtime":1633164639636,"results":"49","hashOfConfig":"30"},{"size":11758,"mtime":1633336566437,"results":"50","hashOfConfig":"30"},{"size":5911,"mtime":1633164072323,"results":"51","hashOfConfig":"30"},{"size":360,"mtime":1632931094518,"results":"52","hashOfConfig":"30"},{"size":139,"mtime":1632931094520,"results":"53","hashOfConfig":"30"},{"size":290,"mtime":1633163087696,"results":"54","hashOfConfig":"30"},{"size":406,"mtime":1633165110609,"results":"55","hashOfConfig":"30"},{"size":780,"mtime":1633189991912,"results":"56","hashOfConfig":"30"},{"size":510,"mtime":1633190521986,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"11wcqvc",{"filePath":"62","messages":"63","errorCount":12,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"81","messages":"82","errorCount":15,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"61"},{"filePath":"84","messages":"85","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"97","messages":"98","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"61"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"102","messages":"103","errorCount":10,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"61"},{"filePath":"105","messages":"106","errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"61"},{"filePath":"108","messages":"109","errorCount":10,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"61"},{"filePath":"111","messages":"112","errorCount":10,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"61"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"116","messages":"117","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"61"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\index.js",["127"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { reducers } from \"./redux/reducers\";\r\n\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\";\r\n// import { TokenProvider } from \"./context/TokenContext\";\r\n// import { CurrentUserProvider } from \"./context/CurrentUserContext\";\r\n// import { GroupsOfUserProvider } from \"./context/GroupsOfUserContext\";\r\n// import ScrollToTop from \"./utils/ScrollTopAuto\";\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <TokenProvider>\r\n          {/* <CurrentUserProvider> */}\r\n          {/* <GroupsOfUserProvider> */}\r\n          {/* <ScrollToTop /> */}\r\n          <App />\r\n          {/* </GroupsOfUserProvider> */}\r\n          {/* </CurrentUserProvider> */}\r\n        </TokenProvider>\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n",[],"E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\App.js",["128","129","130","131","132","133","134","135","136","137","138","139"],"E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\styles.js",["140"],"import COLOR from \"./constants/colors\";\r\n\r\nconst styles = {\r\n  App: {\r\n    fontSize: 20,\r\n  },\r\n};\r\n\r\nexport default styles;\r\n","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\socket\\CuteClientIOProvider.js",["141","142","143","144"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport CuteClientIO from './CuteClientIO'\r\n\r\nconst CuteClientIOContext = React.createContext();\r\n\r\n/**\r\n * provide a context variable to work with CuteClientIO\r\n * @returns {CuteClientIO}\r\n */\r\nexport const useCuteClientIO = () => {\r\n  return useContext(CuteClientIOContext)\r\n}\r\n\r\n\r\nexport const CuteClientIOProvider = ({ serverUri, token, children, onNewConnection }) => {\r\n  /** @type [CuteClientIO, any] */\r\n  const [cuteIO, setCuteIO] = useState(() => new CuteClientIO());\r\n\r\n  useEffect(() => {\r\n    setCuteIO(\r\n      /**\r\n       * @param {CuteClientIO} cuteIO \r\n       */\r\n      cuteIO => {\r\n        cuteIO.connect(serverUri, token)\r\n        onNewConnection(cuteIO);\r\n        return cuteIO;\r\n      }\r\n    );\r\n  }, [token, serverUri])\r\n\r\n  return (\r\n    <CuteClientIOContext.Provider value={cuteIO}>\r\n      {children}\r\n    </CuteClientIOContext.Provider>\r\n  )\r\n}","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\socket\\DemoComponent\\DemoSocket.js",["145"],"import { Button, Input, message } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useCuteClientIO } from '../CuteClientIOProvider.js';\r\n\r\nconst DemoSocket = () => {\r\n  const [text, setText] = useState()\r\n  const handleTextChange = (e) => { setText(e.target.value) }\r\n\r\n  const cuteIO = useCuteClientIO()\r\n\r\n  const handleJoin = () => {\r\n    cuteIO.send(\"JoinDemo\", {})\r\n  }\r\n\r\n  const handleSend = () => {\r\n    cuteIO.send(\"SendDemo\", { text })\r\n  }\r\n\r\n  const handleQuit = () => {\r\n    cuteIO.send(\"QuitDemo\")\r\n  }\r\n\r\n  const onReceiveHandlers = [\r\n    {\r\n      event: \"JoinDemoResponse\",\r\n      handleFunction: (msg) => console.log(msg)\r\n    },\r\n    {\r\n      event: \"SendDemoResponse\",\r\n      handleFunction: (msg) => console.log(msg)\r\n    },\r\n    {\r\n      event: \"QuitDemoResponse\",\r\n      handleFunction: (msg) => console.log(msg)\r\n    }\r\n\r\n  ]\r\n\r\n  useEffect(() => {\r\n    cuteIO.onReceiveMulti(onReceiveHandlers)\r\n\r\n    return () => {\r\n      // clean up\r\n      cuteIO.stopReceiveMulti(onReceiveHandlers)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-start\">\r\n        <Input\r\n          placeholder=\"Input something to send!\"\r\n          value={text}\r\n          onChange={handleTextChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-around\">\r\n        <Button onClick={handleJoin}>Join</Button>\r\n        <Button onClick={handleSend}>Send</Button>\r\n        <Button onClick={handleQuit}>Quit</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DemoSocket","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\redux\\actions\\user.js",[],"E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\redux\\reducers\\index.js",[],"E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\pages\\index.js",[],"E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\api\\auth.js",[],"E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\components\\Navbar\\Navbar.js",["146","147","148","149","150","151","152","153","154","155","156","157","158","159","160"],"import React, { useEffect, useRef, useMemo, useState } from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  Layout,\r\n  Typography,\r\n  Row,\r\n  Input,\r\n  Menu,\r\n  Dropdown,\r\n  Avatar,\r\n  Badge,\r\n  Tooltip,\r\n  notification,\r\n  Button,\r\n} from \"antd\";\r\nimport styles from \"./styles\";\r\n// import logo from \"../../assets/darklogo.png\";\r\nimport {\r\n  SearchOutlined,\r\n  BellFilled,\r\n  EditFilled,\r\n  MessageFilled,\r\n  LogoutOutlined,\r\n  EllipsisOutlined,\r\n  SettingOutlined,\r\n  PicLeftOutlined,\r\n  GlobalOutlined,\r\n} from \"@ant-design/icons\";\r\n// import { useMobile } from \"../../utils/responsiveQuery\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { GrStatusGoodSmall } from \"react-icons/gr\";\r\n\r\nimport decode from \"jwt-decode\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signout } from \"../../redux/actions/auth\";\r\nimport COLOR from \"../../constants/colors\";\r\n// import { useLocalStorage } from \"../../hooks/useLocalStorage\";\r\n// import { useToken } from \"../../context/TokenContext\";\r\nimport { useCuteClientIO } from \"../../socket/CuteClientIOProvider\";\r\n\r\n// import {\r\n//   addUserNotifications,\r\n//   refreshNotifications,\r\n//   setSeenNotification,\r\n//   getUserNotifications,\r\n// } from \"../../redux/actions/notifications\";\r\n// import * as apiConversation from \"../../api/conversation\";\r\nimport NotificationList from \"./NotificationList/NotificationList\";\r\n// import { useMessage } from \"../../hooks/useMessage\";\r\nimport { renderStatus, statusList } from \"../../utils/userStatus\";\r\nimport { setMyStatus } from \"../../api/userStatus\";\r\n// import { useFriendsStatus } from \"../../context/FriendsStatusContext\";\r\n// import { useCurrentUser } from \"../../context/CurrentUserContext\";\r\n\r\nconst { Header } = Layout;\r\nconst { Text } = Typography;\r\n\r\nfunction Navbar({ selectedMenu, setTxtSearch, txtInitSearch }) {\r\n  // const [user, setUser] = useLocalStorage(\"user\");\r\n  // const [currentUser] = useCurrentUser();\r\n  // const [token, setToken] = useToken();\r\n  const inputRef = useRef();\r\n\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  // const isMobile = useMobile();\r\n  const isSmallScreen = useMediaQuery({ query: \"(max-width: 1042px)\" }); // return true if right size\r\n\r\n  const cuteIO = useCuteClientIO();\r\n\r\n  //#region notification handle\r\n\r\n  const notifications = useSelector((state) => state.notifications);\r\n  const unseenNotifications = useMemo(\r\n    () => notifications?.filter((item) => !item.seen),\r\n    [notifications]\r\n  );\r\n\r\n  // const handleClickNotificationItem = (url, notificationId) => {\r\n  //   dispatch(setSeenNotification(notificationId, \"true\", history, url));\r\n\r\n  //   // window.location.reload();\r\n  //   // setTimeout(location.reload); // fix bug push not route\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   if (user) {\r\n  //     dispatch(getUserNotifications());\r\n  //   }\r\n  // }, [user, dispatch]);\r\n\r\n  const openNotification = (msg) => {\r\n    // alert(\"abc\");\r\n    const key = `open${Date.now()}`;\r\n    const btn = (\r\n      <Button\r\n        className=\"green-button\"\r\n        onClick={() => handleClickNotificationItem(msg?.link, msg?._id)}\r\n      >\r\n        Check out\r\n      </Button>\r\n    );\r\n    notification.open({\r\n      message: \"Something new for you to see\",\r\n      description: msg?.content?.description ?? \"\",\r\n      onClick: () => {\r\n        handleClickNotificationItem(msg?.link, msg?._id);\r\n      },\r\n      key,\r\n      duration: 3,\r\n      placement: \"bottomRight\",\r\n      btn,\r\n    });\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const listener = (event, msg) => {\r\n  //     if (event.indexOf(\"Notification\") === 0) {\r\n  //       dispatch(addUserNotifications(msg)); // add noti to it\r\n  //       // console.log(\"noti\", msg);\r\n  //       openNotification(msg);\r\n  //     }\r\n  //   };\r\n  //   cuteIO.onReceiveAny(listener);\r\n\r\n  //   return () => {\r\n  //     cuteIO.stopReceiveAny(listener);\r\n  //   };\r\n  // }, [cuteIO]);\r\n\r\n  //#endregion\r\n\r\n  const handleSearch = () => {\r\n    if (setTxtSearch !== undefined) setTxtSearch(inputRef.current.state.value);\r\n    history.push({\r\n      pathname: \"/search\",\r\n      state: { txtSearch: inputRef.current.state.value },\r\n    });\r\n  };\r\n\r\n  const handlePost = () => {\r\n    history.push(\"/post/create\");\r\n  };\r\n\r\n  const handleFeed = () => {\r\n    history.push(\"/feed\");\r\n  };\r\n\r\n  const handleMessage = () => {\r\n    history.push(\"/message\");\r\n  };\r\n\r\n  const MainMenuItems = () => {\r\n    return (\r\n      <Menu\r\n        style={styles.greenBackground}\r\n        theme=\"dark\"\r\n        mode={!isSmallScreen ? \"horizontal\" : \"vertical\"}\r\n        defaultSelectedKeys={[selectedMenu]}\r\n      >\r\n        <Menu.Item\r\n          key=\"feed\"\r\n          className=\"navitem pickitem text-center\"\r\n          onClick={handleFeed}\r\n        >\r\n          <Tooltip title=\"Feed\" placement=\"bottom\">\r\n            <GlobalOutlined style={{ fontSize: 24, color: COLOR.white }} />\r\n          </Tooltip>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"noti\" className=\"navitem notpickitem text-center\">\r\n          <Dropdown\r\n            overlay={NotificationList({\r\n              handleClickNotificationItem,\r\n              notifications,\r\n            })}\r\n            trigger={[\"click\"]}\r\n            placement=\"bottomRight\"\r\n          >\r\n            <Badge count={unseenNotifications.length} showZero>\r\n              <Tooltip title=\"Notifications\" placement=\"bottom\">\r\n                <BellFilled\r\n                  className=\"clickable\"\r\n                  // onClick={handleNoti}\r\n                  style={{ fontSize: 24, color: COLOR.white }}\r\n                />\r\n              </Tooltip>\r\n            </Badge>\r\n          </Dropdown>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          key=\"edit\"\r\n          className=\"navitem pickitem text-center\"\r\n          onClick={handlePost}\r\n        >\r\n          <Tooltip title=\"Post\" placement=\"bottom\">\r\n            <EditFilled style={{ fontSize: 24, color: COLOR.white }} />\r\n          </Tooltip>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          key=\"message\"\r\n          className=\"text-center navitem pickitem\"\r\n          onClick={handleMessage}\r\n        >\r\n          <Badge count={numberUnseenMessages}>\r\n            <Tooltip title=\"Message\" placement=\"bottom\">\r\n              <MessageFilled style={{ fontSize: 24, color: COLOR.white }} />\r\n            </Tooltip>\r\n          </Badge>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"avatar\" className=\"text-center navitem notpickitem\">\r\n          <Tooltip\r\n            title={\r\n              <div className=\"text-center\">\r\n                {/* <div>{currentUser?.name}</div> */}\r\n                <Dropdown\r\n                  overlay={menuStatus}\r\n                  trigger={[\"click\"]}\r\n                  placement=\"bottomRight\"\r\n                >\r\n                  <Tooltip title=\"Status\" placement=\"right\">\r\n                    {/* <GrStatusGoodSmall\r\n                      className=\"icon\"\r\n                      style={{\r\n                        color: renderStatus(\r\n                          friendsStatusManager.getStatus(currentUser?._id)\r\n                        ),\r\n                      }}\r\n                    /> */}\r\n                  </Tooltip>\r\n                </Dropdown>\r\n              </div>\r\n            }\r\n            placement=\"bottom\"\r\n          >\r\n            {/* <Avatar\r\n              size=\"large\"\r\n              alt={currentUser?.name}\r\n              src={currentUser?.avatarUrl}\r\n              onClick={() => history.push(`/userinfo/${currentUser?._id}`)}\r\n            >\r\n              {currentUser?.name}\r\n            </Avatar> */}\r\n          </Tooltip>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  };\r\n\r\n  //#region menuMore\r\n  const handleLogOut = async () => {\r\n    // await dispatch(logout(setUser, token, setToken));\r\n    // await dispatch(refreshNotifications());\r\n    // history.push(\"/login\");\r\n    const browserId = JSON.parse(localStorage.getItem(\"browser\"))?.id;\r\n\r\n    await dispatch(signout(browserId));\r\n    localStorage.removeItem(\"user\");\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleSettings = async () => {\r\n    history.push(\"/settings\");\r\n  };\r\n\r\n  const handleCreateGroup = async () => {\r\n    history.push(\"/group/create\");\r\n  };\r\n\r\n  // const friendsStatusManager = useFriendsStatus();\r\n\r\n  const handleChangeStatus = (status) => {\r\n    setMyStatus(status);\r\n  };\r\n\r\n  const menuStatus = (\r\n    <Menu>\r\n      {statusList.map((item, i) => (\r\n        <Menu.Item key={i} onClick={() => handleChangeStatus(item.status)}>\r\n          <Row align=\"middle\" style={{ color: item.color }}>\r\n            <GrStatusGoodSmall className=\"mr-2\" />\r\n            <Text>{item.status}</Text>\r\n          </Row>\r\n        </Menu.Item>\r\n      ))}\r\n    </Menu>\r\n  );\r\n\r\n  const menuMore = (\r\n    <Menu>\r\n      {isSmallScreen && <MainMenuItems />}\r\n      <Menu.Item key=\"settings\" onClick={() => handleSettings()}>\r\n        <Row align=\"middle\">\r\n          <SettingOutlined className=\"mr-lg-2\" />\r\n          <Text>Settings</Text>\r\n        </Row>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"createGroup\" onClick={() => handleCreateGroup()}>\r\n        <Row align=\"middle\">\r\n          <PicLeftOutlined className=\"mr-lg-2\" />\r\n          <Text>Add group</Text>\r\n        </Row>\r\n      </Menu.Item>\r\n      {/* <Dropdown\r\n        overlay={menuStatus}\r\n        trigger={[\"click\"]}\r\n        placement=\"bottomRight\"\r\n      >\r\n        <Tooltip title=\"Status\" placement=\"right\">\r\n          <GrStatusGoodSmall className=\"clickable icon\" />\r\n        </Tooltip>\r\n      </Dropdown> */}\r\n\r\n      <Menu.Item key=\"logout\" onClick={() => handleLogOut()}>\r\n        <Row align=\"middle\">\r\n          <LogoutOutlined className=\" red mr-2\" />\r\n          <Text>Logout</Text>\r\n        </Row>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  const menuAuth = (\r\n    <Menu className=\"bg-green-smoke\">\r\n      <Menu.Item key=\"login\" className=\"text-center\">\r\n        <Link to=\"/login\">\r\n          <Text>Login</Text>\r\n        </Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"signup\" className=\"text-center\">\r\n        <Link to=\"/register\">\r\n          <Text>Register</Text>\r\n        </Link>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  //#endregion\r\n\r\n  //#region message notifications\r\n\r\n  const [numberUnseenMessages, setNumberUnseenMessages] = useState(0);\r\n\r\n  // const messageHandle = useMessage();\r\n\r\n  // const handleFetchListUnseenConversations = () => {\r\n  //   apiConversation\r\n  //     .fetchUnseenConversationId()\r\n  //     .then((res) => setNumberUnseenMessages(res.data.length));\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   messageHandle.onReceive((msg) => {\r\n  //     handleFetchListUnseenConversations();\r\n  //   });\r\n\r\n  //   messageHandle.onSeen((msg) => {\r\n  //     handleFetchListUnseenConversations();\r\n  //   });\r\n\r\n  //   handleFetchListUnseenConversations();\r\n\r\n  //   return messageHandle.cleanUpAll;\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   const token = user?.token;\r\n\r\n  //   if (token) {\r\n  //     const decodedToken = decode(token);\r\n\r\n  //     if (decodedToken.exp * 1000 < new Date().getTime()) {\r\n  //       dispatch(logout(setUser, setToken));\r\n  //     }\r\n  //   }\r\n\r\n  //   setUser(JSON.parse(localStorage.getItem(\"user\")));\r\n  // }, [location]);\r\n\r\n  return (\r\n    <Header\r\n      style={{\r\n        ...styles.greenBackground,\r\n        ...styles.fixedHeader,\r\n      }}\r\n    >\r\n      <Row className=\"align-items-center justify-content-between\">\r\n        <div\r\n          className=\"d-flex align-items-center justify-content-between\"\r\n          style={{ width: isSmallScreen ? \"80%\" : \"50%\" }}\r\n        >\r\n          <div style={styles.logo}>\r\n            <Link to=\"/\">\r\n              {/* <img src={logo} alt=\"Logo\" height=\"58\" className=\"mr-2\" /> */}\r\n            </Link>\r\n          </div>\r\n          <Input\r\n            onPressEnter={handleSearch}\r\n            allowClear\r\n            suffix={\r\n              <SearchOutlined\r\n                onClick={handleSearch}\r\n                style={{ fontSize: 24, color: COLOR.white }}\r\n              />\r\n            }\r\n            ref={inputRef}\r\n            bordered={false}\r\n            style={{ backgroundColor: COLOR.lightGreen }}\r\n            defaultValue={txtInitSearch}\r\n          />\r\n        </div>\r\n\r\n        {user ? (\r\n          <div className=\"d-flex\">\r\n            {!isSmallScreen && <MainMenuItems />}\r\n\r\n            <Menu theme=\"dark\" mode=\"horizontal\" style={styles.greenBackground}>\r\n              <Dropdown\r\n                overlay={menuMore}\r\n                trigger={[\"click\"]}\r\n                placement=\"bottomCenter\"\r\n              >\r\n                <EllipsisOutlined\r\n                  style={{ fontSize: 24, color: COLOR.white }}\r\n                />\r\n              </Dropdown>\r\n            </Menu>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Menu\r\n              style={styles.greenBackground}\r\n              theme=\"dark\"\r\n              mode={!isSmallScreen ? \"horizontal\" : \"vertical\"}\r\n              defaultSelectedKeys={[selectedMenu]}\r\n            >\r\n              {!isSmallScreen ? (\r\n                menuAuth\r\n              ) : (\r\n                <Dropdown\r\n                  overlay={menuAuth}\r\n                  trigger={[\"click\"]}\r\n                  placement=\"bottomCenter\"\r\n                >\r\n                  <EllipsisOutlined\r\n                    style={{ fontSize: 24, color: COLOR.white }}\r\n                  />\r\n                </Dropdown>\r\n              )}\r\n            </Menu>\r\n          </>\r\n        )}\r\n      </Row>\r\n    </Header>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\socket\\CuteClientIO.js",["161"],"import io, { Socket } from \"socket.io-client\";\r\n\r\n/**\r\n * [Full documentation](https://www.google.com)\r\n */\r\nexport default class CuteClientIO {\r\n  /**\r\n   * @type Socket<DefaultEventsMap, DefaultEventsMap>?\r\n   */\r\n  #socket = null;\r\n\r\n  /**\r\n   * @deprecated Just in case you really need to access the real socket.io's API, I provide this to you. But try to use the supported methods or contact CuteTN first, thank you.\r\n   */\r\n  get socket() {\r\n    return this.#socket;\r\n  }\r\n\r\n  /** @type string */\r\n  #socketId = null;\r\n\r\n  get socketId() {\r\n    return this.#socketId;\r\n  }\r\n\r\n  #uri = null;\r\n  #token = null;\r\n  #browserId = null;\r\n\r\n  /**\r\n   * this is to store a list of event handlers in case you might try to subscribe onReceive to socket before connection :)\r\n   * @type [{event: string, handleFunction: OnReceiveDelegate}]\r\n   */\r\n  #queueEventHandlersOnConnection = [];\r\n  #queueAnyEventHandlersOnConnection = [];\r\n\r\n  /**\r\n   * set socket with new serverUri and token and connect to server\r\n   * @param {string} serverUri The address of the server.\r\n   * @param {string} token\r\n   * @returns {CuteClientIO}\r\n   */\r\n  connect = (serverUri, token) => {\r\n    if (serverUri === this.#uri && token === this.#token) return this;\r\n\r\n    this.#uri = serverUri;\r\n    this.#token = token;\r\n    this.#browserId = JSON.parse(localStorage.getItem(\"browser\"))?.id;\r\n\r\n    this.close();\r\n\r\n    const query = {\r\n      token: this.#token\r\n    };\r\n    if (this.#browserId)\r\n      query.browserId = this.#browserId;\r\n\r\n    this.#socket = io(this.#uri, { query });\r\n\r\n    this.#socket.on(\"connect\", () => {\r\n      this.#socketId = this.#socket.id;\r\n      console.info(\r\n        `[IO] Connected to ${this.#socketId} at ${this.#uri}`\r\n      );\r\n\r\n      this.socket.once(\"System-AcceptBrowserId\", (msg) => {\r\n        // DANGER: async accross tabs here\r\n\r\n        // fetch again to ensure the last update...\r\n        this.#browserId = JSON.parse(localStorage.getItem(\"browser\"))?.id;\r\n\r\n        // if the browser is not yet assigned an ID, then do it and reconnect\r\n        if (!this.#browserId) {\r\n          localStorage.setItem(\"browser\", JSON.stringify({ id: msg.browserId }));\r\n          this.connect(serverUri, token);\r\n          return;\r\n        }\r\n\r\n        // if there's a conflict between the browser's current ID and the one assign by server, reconnect\r\n        if (this.#browserId !== msg.browserId) {\r\n          this.connect(serverUri, token);\r\n          return;\r\n        }\r\n      })\r\n\r\n      this.onReceiveMulti(this.#queueEventHandlersOnConnection);\r\n      this.#queueEventHandlersOnConnection = [];\r\n\r\n      this.#queueAnyEventHandlersOnConnection.forEach(h => this.onReceiveAny(h));\r\n      this.#queueAnyEventHandlersOnConnection = [];\r\n\r\n      this.#socket.on(\"disconnect\", (reason) => {\r\n        console.info(\r\n          `[IO] Disconnected from ${this.#socketId}. Reason: ${reason}`\r\n        );\r\n      });\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  /** stop connection to server */\r\n  close = () => {\r\n    this.#socket?.close();\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {string} event\r\n   * @param {any} msg\r\n   */\r\n  send = (event, msg) => {\r\n    this.#socket?.emit(event, msg);\r\n  };\r\n\r\n  /**\r\n   * @param {string} event\r\n   * @param {OnReceiveDelegate} handleFunction\r\n   */\r\n  onReceive = (event, handleFunction) => {\r\n    if (this.#socket) this.#socket.on(event, handleFunction);\r\n    else this.#queueEventHandlersOnConnection.push({ event, handleFunction });\r\n\r\n    return () => this.stopReceive(event, handleFunction);\r\n  };\r\n\r\n  /**\r\n   * @param {OnReceiveAnyDelegate} handleFunction\r\n   */\r\n  onReceiveAny = (handleFunction) => {\r\n    if (this.#socket) this.#socket.onAny(handleFunction);\r\n    else this.#queueAnyEventHandlersOnConnection.push(handleFunction)\r\n\r\n    return () => this.stopReceiveAny(handleFunction);\r\n  }\r\n\r\n  /**\r\n   * Add multiple event handlers at once because you'll need it :)\r\n   * @param {[{event: string, handleFunction: OnReceiveDelegate}]} eventHandlers\r\n   */\r\n  onReceiveMulti = (eventHandlers) => {\r\n    eventHandlers.forEach((e) => this.onReceive(e.event, e.handleFunction));\r\n\r\n    return () => this.stopReceiveMulti(eventHandlers);\r\n  };\r\n\r\n  /**\r\n   * @param {string} event\r\n   * @param {OnReceiveDelegate} handleFunction\r\n   */\r\n  stopReceive = (event, handleFunction) => {\r\n    this.#socket?.off(event, handleFunction);\r\n  };\r\n\r\n\r\n  /**\r\n   * @param {OnReceiveAnyDelegate} handleFunction \r\n   */\r\n  stopReceiveAny = (handleFunction) => {\r\n    this.#socket.offAny(handleFunction);\r\n  }\r\n\r\n\r\n  /**\r\n   * Stop multiple event handlers at once because you'll need it :)\r\n   * @param {[{event: string, handleFunction: OnReceiveDelegate}]} eventHandlers\r\n   */\r\n  stopReceiveMulti = (eventHandlers) => {\r\n    eventHandlers.forEach((e) => this.stopReceive(e.event, e.handleFunction));\r\n  };\r\n}\r\n\r\n//#region typedefs\r\n////////////////////////////////////////////////////////////////////////////////////////////////////\r\n/**\r\n * A kind of function to handle any messages that are emitted from the clients\r\n * @callback OnReceiveDelegate\r\n * @param {any} msg\r\n * @returns {any}\r\n */\r\n\r\n/**\r\n * A kind of function to handle any messages that are emitted from the clients\r\n * @callback OnReceiveAnyDelegate\r\n * @param {string} event\r\n * @param {any} msg\r\n * @returns {any}\r\n */\r\n\r\n//#endregion\r\n","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\redux\\actionTypes.js",[],"E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\redux\\reducers\\auth.js",[],"E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\redux\\reducers\\user.js",[],"E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\api\\index.js",[],"E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\components\\Navbar\\styles.js",[],"E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\redux\\actions\\auth.js",["162","163","164"],"import { AUTH, LOGOUT } from \"../actionTypes\";\r\nimport * as api from \"../../api/auth\";\r\nimport { message } from \"antd\";\r\n\r\nexport const signin =\r\n  (\r\n    formData,\r\n    router,\r\n    setLocalStorageUser,\r\n    oldToken,\r\n    setToken,\r\n    setResend,\r\n    setDisableLogin\r\n  ) =>\r\n  async (dispatch) => {\r\n    try {\r\n      console.log(\"signin\");\r\n      const { data } = await api.signIn(formData);\r\n      dispatch({ type: AUTH, data, setLocalStorageUser });\r\n      // dirty code to force sign in\r\n      // setTimeout(() => {\r\n      //   setToken(JSON.parse(localStorage.getItem(\"user\"))?.token);\r\n      // }, 2000);\r\n      // forceGetNewLocalStorageToken(oldToken, setToken);\r\n\r\n      // router.push(\"/\");\r\n      // window.location.reload();\r\n      message.success(\"Login successfully!\");\r\n    } catch (error) {\r\n      const code = error.response?.status;\r\n      const data = error.response?.data;\r\n      if (code === 401 || code === 404) {\r\n        if (data.message === \"Unactivated\") {\r\n          setDisableLogin(true);\r\n          setResend(true);\r\n          message.success(\"Please check your email to verify.\");\r\n        } else {\r\n          setDisableLogin(false);\r\n          message.error(\"Wrong username or password.\");\r\n        }\r\n      } else {\r\n        setDisableLogin(false);\r\n        message.error(\"Something went wrong.\");\r\n      }\r\n    }\r\n  };\r\n\r\nexport const signup =\r\n  (formData, setResend, setDisableReg) => async (dispatch) => {\r\n    try {\r\n      console.log(\"signup\");\r\n      await api.signUp(formData);\r\n      // dispatch({ type: AUTH, data });\r\n      setResend(true);\r\n      message.success(\"Please check your email to verify.\");\r\n    } catch (error) {\r\n      var errorMessage;\r\n      switch (error.response?.status) {\r\n        case 409:\r\n          errorMessage = \"User already exists.\";\r\n          setDisableReg(false);\r\n          break;\r\n        default:\r\n          errorMessage = \"Something went wrong.\";\r\n          setDisableReg(false);\r\n      }\r\n      message.error(errorMessage);\r\n    }\r\n  };\r\n\r\nexport const signout = (browserId) => async (dispatch) => {\r\n  api.signOut(browserId);\r\n};\r\n// (setLocalStorageUser, oldToken, setToken) => async (dispatch) => {\r\n// dispatch({ type: LOGOUT, setLocalStorageUser });\r\n// setTimeout(() => {\r\n//   setToken(JSON.parse(localStorage.getItem(\"user\"))?.token);\r\n//   // setToken(null);\r\n// }, 2000);\r\n// window.location.reload(); // this is to make force log out work :)\r\n// forceGetNewLocalStorageToken(oldToken, setToken);\r\n// };\r\n","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\api\\userStatus.js",[],"E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\pages\\LoginPage\\LoginPage.js",["165","166","167","168","169","170","171","172","173","174"],"import React, { useRef, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Typography,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Form,\r\n  Checkbox,\r\n  message,\r\n} from \"antd\";\r\n\r\n// import logo from \"../../assets/lightlogo.png\";\r\n// import loginImage from \"../../assets/login.png\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { GrGoogle, GrFacebook } from \"react-icons/gr\";\r\nimport { SiGithub } from \"react-icons/si\";\r\nimport { signin } from \"../../redux/actions/auth\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport COLOR from \"../../constants/colors\";\r\n// import { useToken } from \"../../context/TokenContext\";\r\n// import { useLocalStorage } from \"../../hooks/useLocalStorage\";\r\nimport { resendVerificationMail } from \"../../api/auth\";\r\n// import { AUTH } from \"../../redux/actionTypes\";\r\n// import * as apiAuth from \"../../api/auth\";\r\n// import { BACKEND_URL, GITHUB_CLIENT_ID } from \"../../constants/config\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  remember: \"\",\r\n};\r\n\r\nfunction LoginPage() {\r\n  const [form, setForm] = useState(initialState);\r\n  // const [user, setUser] = useLocalStorage(\"user\");\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [resend, setResend] = useState(false);\r\n  const disableLogin = useRef(false);\r\n\r\n  // const [token, setToken] = useToken();\r\n\r\n  const setDisableLogin = (b) => {\r\n    disableLogin.current = b;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n    if (resend === true) setResend(false);\r\n  };\r\n\r\n  // const handleFinish = async (values) => {\r\n  //   if (disableLogin.current === false) {\r\n  //     console.log(\"handle login\");\r\n  //     setDisableLogin(true);\r\n  //     const browserId = JSON.parse(localStorage.getItem(\"browser\"))?.id;\r\n  //     dispatch(\r\n  //       signin(\r\n  //         { ...form, browserId },\r\n  //         history,\r\n  //         setUser,\r\n  //         token,\r\n  //         setToken,\r\n  //         setResend,\r\n  //         setDisableLogin\r\n  //       )\r\n  //     );\r\n  //   }\r\n  // };\r\n\r\n  const handleResend = async () => {\r\n    resendVerificationMail(form.email);\r\n    message.success(\"Verification mail sent!\");\r\n  };\r\n\r\n  const handleFinishFailed = (errorInfo) => {\r\n    errorInfo.errorFields.forEach((err) => {\r\n      message.error(err.errors[0]);\r\n    });\r\n  };\r\n\r\n  //#region google sign in\r\n\r\n  const googleSuccess = async (res) => {\r\n    console.log(\"google signin\", res);\r\n    const result = res?.profileObj;\r\n    const token = res?.tokenId;\r\n\r\n    try {\r\n      //TODO: handle google sign in with Nghia, for browser token bla bla\r\n      // dispatch({ type: AUTH, data: { result, token, setUser } });\r\n\r\n      history.push(\"/\");\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const googleError = (error) => {\r\n    // message.error(\"Google Sign In was unsuccessful. Try again later\");\r\n    console.log(\"error google login\", error);\r\n  };\r\n\r\n  //#endregion\r\n\r\n  //#region github\r\n  // const handleLoginGithub = () => {\r\n  //   const redirect_uri = `${BACKEND_URL}/user/login/github/callback`;\r\n  //   const browserId = JSON.parse(localStorage.getItem(\"browser\"))?.id;\r\n  //   window.location.replace(\r\n  //     `https://github.com/login/oauth/authorize?client_id=${GITHUB_CLIENT_ID}&redirect_uri=${redirect_uri}&browserId=${browserId}`\r\n  //   );\r\n  // };\r\n\r\n  //#endregion\r\n\r\n  return (\r\n    <div\r\n      className=\"full d-flex align-items-center justify-content-center\"\r\n      style={{ backgroundColor: COLOR.greenSmoke }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: 900,\r\n          paddingBottom: 0,\r\n        }}\r\n      >\r\n        <Card className=\"shadow-lg rounded\" bordered={false}>\r\n          <Row style={{ alignItems: \"center\" }}>\r\n            <div\r\n              className=\"col-md-6\"\r\n              style={{ paddingRight: 24, marginBottom: 24 }}\r\n            >\r\n              <div className=\"row\">\r\n                <Link to=\"/\">\r\n                  {/* <img src={logo} alt=\"Logo\" height=\"58\" className=\"mr-2\" /> */}\r\n                </Link>\r\n                <Title style={{ marginBottom: 8 }}>Login</Title>\r\n              </div>\r\n              <div style={{ marginBottom: 16 }}>\r\n                <Text>\r\n                  No account?{\" \"}\r\n                  <Link to=\"/register\">\r\n                    <Text className=\"clickable green bold\">Create one!</Text>\r\n                  </Link>\r\n                </Text>\r\n              </div>\r\n              <Form\r\n                name=\"basic\"\r\n                size=\"large\"\r\n                // onFinish={resend ? handleResend : handleFinish}\r\n                // onFinishFailed={handleFinishFailed}\r\n              >\r\n                <Form.Item\r\n                  name=\"email\"\r\n                  rules={[\r\n                    {\r\n                      type: \"email\",\r\n                      message: \"Invalid email.\",\r\n                    },\r\n                    {\r\n                      required: true,\r\n                      message: \"Email is required.\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"password\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Password is required.\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Item>\r\n                <Row justify=\"end\" style={{ marginBottom: 24 }}>\r\n                  {/* <Checkbox name=\"remember\" onChange={handleChange}>\r\n                    Remember me\r\n                  </Checkbox> */}\r\n                  <Text className=\"clickable green \">Forgot password?</Text>\r\n                </Row>\r\n\r\n                <Form.Item style={{ marginBottom: 16 }}>\r\n                  <Button\r\n                    style={{ width: \"100%\" }}\r\n                    className=\"green-button\"\r\n                    htmlType=\"submit\"\r\n                  >\r\n                    {resend ? \"Resend verification mail\" : \"Sign in\"}\r\n                  </Button>\r\n                </Form.Item>\r\n                <div\r\n                  className=\"d-flex justify-content-center\"\r\n                  style={{ marginBottom: 16 }}\r\n                >\r\n                  <Text>Or login with</Text>\r\n                </div>\r\n                <Row>\r\n                  <Col xs={24} lg={12} style={{ padding: 4 }}>\r\n                    <GoogleLogin\r\n                      clientId=\"870911963949-uhovihqpkloivbqnk2c5vgchedih3ej5.apps.googleusercontent.com\"\r\n                      render={(renderProps) => (\r\n                        <Button\r\n                          className=\"google-container\"\r\n                          // htmlType=\"submit\"\r\n                          icon={\r\n                            <GrGoogle\r\n                              style={{ marginBottom: 2.5, marginRight: 12 }}\r\n                            />\r\n                          }\r\n                          onClick={renderProps.onClick}\r\n                          // disabled={renderProps.disabled}\r\n                          style={{ width: \"100%\" }}\r\n                        >\r\n                          Google\r\n                        </Button>\r\n                      )}\r\n                      onSuccess={googleSuccess}\r\n                      onFailure={googleError}\r\n                      cookiePolicy=\"single_host_origin\"\r\n                    />\r\n                  </Col>\r\n                  {/* <Col xs={24} lg={8} style={{ padding: 4 }}>\r\n                    <Button\r\n                      className=\"facebook-container\"\r\n                      // htmlType=\"submit\"\r\n                      icon={\r\n                        <GrFacebook\r\n                          style={{ marginBottom: 2.5, marginRight: 12 }}\r\n                        />\r\n                      }\r\n                      style={{ width: \"100%\" }}\r\n                    >\r\n                      Facebook\r\n                    </Button>\r\n                  </Col> */}\r\n                  <Col xs={24} lg={12} style={{ padding: 4 }}>\r\n                    <Button\r\n                      className=\"github-container\"\r\n                      // htmlType=\"submit\"\r\n                      icon={\r\n                        <SiGithub\r\n                          style={{ marginBottom: 2.5, marginRight: 12 }}\r\n                        />\r\n                      }\r\n                      onClick={() => handleLoginGithub()}\r\n                      style={{ width: \"100%\" }}\r\n                    >\r\n                      Github\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </div>\r\n            <div\r\n              className=\"col-md-5 d-md-block d-sm-none d-none\"\r\n              style={{ justifyItems: \"center\" }}\r\n            >\r\n              <div>\r\n                {/* <img\r\n                  src={loginImage}\r\n                  alt=\"Register\"\r\n                  height=\"400\"\r\n                  // className=\"object-fit\"\r\n                  // height=\"58\"\r\n                  // className=\"mr-2\"\r\n                /> */}\r\n              </div>\r\n            </div>\r\n          </Row>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\pages\\RegisterPage\\RegisterPage.js",["175","176","177","178","179"],"import React, { useRef, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Typography,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Form,\r\n  Select,\r\n  DatePicker,\r\n  message,\r\n} from \"antd\";\r\n\r\n// import { ReactComponent as ReactLogo } from \"../../assets/add-user.svg\";\r\n// import logo from \"../../assets/lightlogo.png\";\r\nimport addUserImage from \"../../assets/add-user.png\";\r\n\r\nimport styles from \"./styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signup } from \"../../redux/actions/auth\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport COLOR from \"../../constants/colors\";\r\nimport { resendVerificationMail } from \"../../api/auth\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst { Option } = Select;\r\n\r\nconst dateFormat = \"DD/MM/YYYY\";\r\n\r\nconst initialState = {\r\n  newEmail: \"\",\r\n  newPassword: \"\",\r\n  confirmPassword: \"\",\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  gender: \"\",\r\n  dob: \"\",\r\n};\r\n\r\nfunction RegisterPage() {\r\n  const [form, setForm] = useState(initialState);\r\n  const dispatch = useDispatch();\r\n  const [resend, setResend] = useState(false);\r\n  const disableReg = useRef(false);\r\n\r\n  const setDisableReg = (b) => {\r\n    disableReg.current = b;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e?.target.name]: e?.target.value });\r\n    if (resend) setResend(false);\r\n  };\r\n\r\n  const handleChangeDob = (date) => {\r\n    // var now = moment();\r\n    // var input = moment(date);\r\n    // if (now.diff(input, \"years\") < 18) {\r\n    //   setDobError(\"You must be 18 or older.\");\r\n    // } else {\r\n    //   setDobError(null);\r\n    //   setForm({ ...form, dob: date });\r\n    // }\r\n    setForm({ ...form, dob: date });\r\n  };\r\n\r\n  const handleChangeGender = (value) => {\r\n    setForm({ ...form, gender: value });\r\n  };\r\n\r\n  const handleFinish = (values) => {\r\n    if (disableReg.current === false) {\r\n      console.log(\"fuckfuck\");\r\n      const data = {\r\n        email: form.newEmail,\r\n        password: form.newPassword,\r\n        firstName: form.firstName,\r\n        lastName: form.lastName,\r\n        gender: form.gender,\r\n        dob: form.dob,\r\n      };\r\n      setDisableReg(true);\r\n      //TODO: unable to register for demo\r\n      dispatch(signup(data, setResend, setDisableReg));\r\n    }\r\n  };\r\n\r\n  const handleResend = () => {\r\n    resendVerificationMail(form.newEmail);\r\n    message.success(\"Verification mail sent!\");\r\n  };\r\n\r\n  const handleFinishFailed = (errorInfo) => {\r\n    errorInfo.errorFields.map((err) => {\r\n      message.error(err.errors[0]);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"full d-flex align-items-center justify-content-center\"\r\n      style={{ backgroundColor: COLOR.greenSmoke }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: 1000,\r\n          paddingBottom: 0,\r\n        }}\r\n      >\r\n        <Row style={{ justifyContent: \"center\" }}> </Row>\r\n        <Card className=\"shadow-lg rounded\" bordered={false}>\r\n          <Row style={{ alignItems: \"center\" }}>\r\n            <div\r\n              className=\"col-md-6\"\r\n              style={{ paddingRight: 24, marginBottom: 0 }}\r\n            >\r\n              <Row>\r\n                <Link to=\"/\">\r\n                  {/* <img src={logo} alt=\"Logo\" height=\"58\" className=\"mr-2\" /> */}\r\n                </Link>\r\n                <Title style={{ marginBottom: 8 }}>Register</Title>\r\n              </Row>\r\n              <div style={{ marginBottom: 16 }}>\r\n                <Text>\r\n                  Already have an account?{\" \"}\r\n                  <Link to=\"/login\">\r\n                    <Text className=\"clickable green bold\">Log in</Text>\r\n                  </Link>\r\n                </Text>\r\n              </div>\r\n              <Form\r\n                name=\"basic\"\r\n                size=\"large\"\r\n                onFinish={resend ? handleResend : handleFinish}\r\n                onFinishFailed={handleFinishFailed}\r\n              >\r\n                <Form.Item\r\n                  name=\"newEmail\"\r\n                  rules={[\r\n                    {\r\n                      type: \"email\",\r\n                      message: \"Invalid email.\",\r\n                    },\r\n                    {\r\n                      required: true,\r\n                      message: \"Email is required.\",\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        // console.log(\"value\", value.length);\r\n                        if (value.length >= 6) {\r\n                          return Promise.resolve();\r\n                        }\r\n                        return Promise.reject(\r\n                          new Error(\"Password must be at least 6 characters.\")\r\n                        );\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    name=\"newEmail\"\r\n                    placeholder=\"Email\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"newPassword\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Password is required.\",\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        // console.log(\"value\", value.length);\r\n                        if (value.length >= 6) {\r\n                          return Promise.resolve();\r\n                        }\r\n                        return Promise.reject(\r\n                          new Error(\"Password must be at least 6 characters.\")\r\n                        );\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    name=\"newPassword\"\r\n                    autoComplete=\"newPassword\"\r\n                    placeholder=\"Password\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"confirmPassword\"\r\n                  dependencies={[\"newPassword\"]}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Password confirm is required.\",\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        if (!value || getFieldValue(\"newPassword\") === value) {\r\n                          return Promise.resolve();\r\n                        }\r\n                        return Promise.reject(\r\n                          new Error(\"Password does not match!\")\r\n                        );\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    placeholder=\"Confirm password\"\r\n                    suffix={null}\r\n                  />\r\n                </Form.Item>\r\n                <Row gutter={8}>\r\n                  <Col span={12}>\r\n                    <Form.Item\r\n                      name=\"firstName\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"First name is required.\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        name=\"firstName\"\r\n                        placeholder=\"First name\"\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={12}>\r\n                    <Form.Item\r\n                      name=\"lastName\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Last name is required.\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        name=\"lastName\"\r\n                        placeholder=\"Last name\"\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Row gutter={8}>\r\n                  <Col span={10}>\r\n                    <Form.Item\r\n                      name=\"gender\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Gender is required.\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        placeholder=\"Gender\"\r\n                        name=\"gender\"\r\n                        onChange={handleChangeGender}\r\n                        style={{ width: \"100%\" }}\r\n                      >\r\n                        <Option value=\"Male\">Male</Option>\r\n                        <Option value=\"Female\">Female</Option>\r\n                        <Option value=\"Other\">Other</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={14}>\r\n                    <Form.Item\r\n                      name=\"dob\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Date of birth is required.\",\r\n                        },\r\n                        ({ getFieldValue }) => ({\r\n                          validator(_, value) {\r\n                            var now = moment();\r\n                            var input = moment(value);\r\n                            // console.log(\"dob valid\", now.diff(input, \"years\"));\r\n                            if (!value || now.diff(input, \"years\") >= 13) {\r\n                              return Promise.resolve();\r\n                            }\r\n                            return Promise.reject(\r\n                              new Error(\"You must be at least 13 years old.\")\r\n                            );\r\n                          },\r\n                        }),\r\n                      ]}\r\n                    >\r\n                      <DatePicker\r\n                        name=\"dob\"\r\n                        placeholder=\"Date of birth\"\r\n                        onChange={handleChangeDob}\r\n                        style={{ width: \"100%\" }}\r\n                        format={dateFormat}\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Form.Item style={{}}>\r\n                  <Button\r\n                    style={{ width: \"100%\" }}\r\n                    className=\"green-button\"\r\n                    htmlType=\"submit\"\r\n                  >\r\n                    {resend ? \"Resend verification mail\" : \"Create account\"}\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n            <div\r\n              className=\"col-md-5 d-md-block d-sm-none d-none\"\r\n              style={{ marginTop: 0 }}\r\n            >\r\n              <div>\r\n                <img\r\n                  src={addUserImage}\r\n                  alt=\"Register\"\r\n                  height=\"450\"\r\n                  // className=\"object-fit\"\r\n                  // height=\"58\"\r\n                  // className=\"mr-2\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </Row>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\pages\\HomePage\\HomePage.js",["180","181","182","183","184","185","186","187","188","189"],"import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Button, Image, Typography } from \"antd\";\r\nimport styles from \"./styles.js\";\r\nimport RotatingText from \"react-rotating-text\";\r\n\r\nimport Navbar from \"../../components/Navbar/Navbar\";\r\n\r\n// import Footer from \"../../components/Footer/Footer\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n// import { useLocalStorage } from \"../../hooks/useLocalStorage.js\";\r\nimport HorizontalScroll from \"react-scroll-horizontal\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nimport \"./styles.css\";\r\n// import * as apiHashtag from \"../../api/hashtag\";\r\n// import * as apiSearch from \"../../api/search\";\r\n// import FeedPost from \"../../components/Posts/FeedPosts/FeedPost/FeedPost\";\r\n// import LoadingSearch from \"../../components/Loading/LoadingSearch\";\r\nimport { useMobile } from \"../../utils/responsiveQuery\";\r\nimport COLOR from \"../../constants/colors.js\";\r\n\r\nconst { Title, Text } = Typography;\r\nconst pagePadding = 148;\r\nfunction HomePage() {\r\n  const [user] = useLocalStorage(\"user\");\r\n  const [hashtags, setHashtags] = useState([]);\r\n  const isMobile = useMobile();\r\n  const history = useHistory();\r\n\r\n  const [listPostsOfTags, setListPostsOfTags] = useState({});\r\n  const [loadingTags, setLoadingTags] = useState(false);\r\n  const [loadingAll, setLoadingAll] = useState(false);\r\n  const [selectedTag, setSelectedTag] = useState();\r\n  const fetchAllDataOfTags = async () => {\r\n    let tempData = {};\r\n    let tempTags = [];\r\n    // for (let i = 0; i < hashtags.length; i++) {\r\n    //   const { data } = await apiSearch.fetchSearchPostByTag(hashtags[i].name);\r\n    //   tempData[hashtags[i].name] = data;\r\n    //   if (data.length >= 1)\r\n    //     tempTags.push({ name: hashtags[i].name, _id: hashtags[i]._id });\r\n    // }\r\n    setHashtags(tempTags);\r\n    setListPostsOfTags(tempData);\r\n    setLoadingAll(true);\r\n    setSelectedTag(tempTags[0].name);\r\n  };\r\n  useEffect(() => {\r\n    AOS.init({\r\n      duration: 2000,\r\n    });\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   setLoadingTags(false);\r\n  //   apiHashtag\r\n  //     .fetchHashtagsTop(20)\r\n  //     .then((res) => {\r\n  //       setHashtags(res.data);\r\n  //       setLoadingTags(true);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       alert(\"Cannot get hashtags of system\");\r\n  //       console.log(\"Error when getting top hashtags\", error);\r\n  //     });\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    if (hashtags.length !== 0 && loadingTags) fetchAllDataOfTags();\r\n  }, [loadingTags]);\r\n\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const github = urlParams.get(\"github\");\r\n    if (github === \"true\") {\r\n      const token = urlParams.get(\"token\");\r\n      const name = urlParams.get(\"name\");\r\n      const _id = urlParams.get(\"id\");\r\n      localStorage.setItem(\r\n        \"user\",\r\n        JSON.stringify({\r\n          token,\r\n          result: {\r\n            name,\r\n            _id,\r\n          },\r\n        })\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const BigTag = ({ title }) => {\r\n    return (\r\n      <div\r\n        onMouseEnter={() => {\r\n          if (!listPostsOfTags || !title) return;\r\n          setSelectedTag(title);\r\n          console.log(\"selected\", title);\r\n        }}\r\n        // style={{ background: \"red\" }}\r\n      >\r\n        <Text\r\n          className=\"boldhover\"\r\n          style={{ fontSize: isMobile ? 14 : 40, marginRight: 32 }}\r\n        >\r\n          {title}\r\n        </Text>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const HashTagsSelection = () => {\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            height: 68,\r\n            marginBottom: 50,\r\n          }}\r\n        >\r\n          <HorizontalScroll>\r\n            {hashtags.map((item) => (\r\n              <BigTag key={item._id} title={item.name} />\r\n            ))}\r\n          </HorizontalScroll>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            // height: 68,\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            data-aos=\"zoom-in-up\"\r\n            style={{\r\n              marginBottom: 32,\r\n              backgroundColor: \"white\",\r\n            }}\r\n          >\r\n            {/* {listPostsOfTags[selectedTag]?.map((post, i) => {\r\n              return <FeedPost key={post._id} post={post}></FeedPost>;\r\n            })} */}\r\n          </div>\r\n          {/* <Title className=\"boldhover\">Explore this tag</Title> */}\r\n          <div style={{ height: 200 }} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Navbar />\r\n        <div\r\n          className=\"main\"\r\n          style={{ marginTop: 64, padding: 24, alignItems: \"center\" }}\r\n        >\r\n          <div className=\"row\" style={{ marginBottom: 100 }}>\r\n            <img\r\n              style={{\r\n                position: \"absolute\",\r\n                left: 0,\r\n                right: 0,\r\n                opacity: 0.3,\r\n                width: isMobile ? 400 : \"100%\",\r\n              }}\r\n              alt=\"bg-home\"\r\n              src=\"https://i.ibb.co/KhP9yq3/programming.png\"\r\n            />\r\n            <div\r\n              className=\"col-lg-6 align-items-center justify-content-center\"\r\n              // style={{ zIndex: 1 }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontSize: isMobile ? 30 : 60,\r\n                  fontWeight: \"bolder\",\r\n                  marginBottom: 0,\r\n                  padding: 0,\r\n                  paddingLeft: isMobile ? 64 : 0,\r\n                }}\r\n              ></Text>\r\n              <br />\r\n              {/* <Text style={{ fontSize: 60, fontWeight: \"bolder\" }}>\r\n                programming skills\r\n              </Text> */}\r\n              <RotatingText\r\n                style={{\r\n                  fontWeight: 500,\r\n                  fontSize: \"2.5rem\",\r\n                  color: COLOR.green,\r\n                }}\r\n                deletingInterval={16}\r\n                items={[\"programming skills\", \"tiny bugs\", \"coding experience\"]}\r\n              />\r\n              <br />\r\n              <div className=\"mt-4\" />\r\n              <Text style={{ fontSize: 28 }}></Text>\r\n              <br />\r\n              <div className=\"row ml-1 mt-5 mb-5\">\r\n                <Button\r\n                  className=\"green-button mr-4\"\r\n                  size=\"large\"\r\n                  style={{\r\n                    fontFamily: \"Consolas\",\r\n                    fontSize: isMobile ? 12 : 18,\r\n                  }}\r\n                  onClick={() =>\r\n                    history.push(\"/group/60d08c234088f200159fc6db/main\")\r\n                  }\r\n                >\r\n                  Interview preparation\r\n                </Button>\r\n\r\n                <Button\r\n                  className=\"green-button\"\r\n                  size=\"large\"\r\n                  style={{\r\n                    fontFamily: \"Consolas\",\r\n                    fontSize: isMobile ? 12 : 18,\r\n                  }}\r\n                  onClick={() =>\r\n                    history.push(\"/group/60d0c3b380bc9b4f44217c30/main\")\r\n                  }\r\n                >\r\n                  Hello World\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            {/* <div\r\n              className=\"col-lg-6\"\r\n              style={{\r\n                alignItems: \"stretch\",\r\n                justifyContent: \"stretch\",\r\n              }}\r\n            >\r\n              <div style={{ flex: 1, height: 480 }}> */}\r\n\r\n            {/* </div>\r\n            </div> */}\r\n          </div>\r\n          <div\r\n            style={{\r\n              marginBottom: 100,\r\n            }}\r\n          >\r\n            <div data-aos=\"zoom-in\">\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  height: isMobile ? 300 : 600,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <img\r\n                  style={{ height: \"100%\" }}\r\n                  alt=\"bg-connect\"\r\n                  src=\"https://i.ibb.co/3vK8Tcx/getconnected.jpg\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div style={{ height: 24 }} />\r\n\r\n            <div data-aos=\"fade-up\" style={{ textAlign: \"center\" }}>\r\n              <Text strong style={{ fontSize: 40 }}>\r\n                Connect to the programming world\r\n              </Text>\r\n              <br />\r\n              <div style={{ height: 16 }} />\r\n              <Text style={{ fontSize: 24 }}>\r\n                Easily reach out to other coders and gain your opportunity to\r\n                seek new companions.\r\n              </Text>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            data-aos=\"fade-right\"\r\n            className=\"row\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              marginBottom: 100,\r\n            }}\r\n          >\r\n            <div className=\"col-lg-6 mb-4\" style={{ textAlign: \"left\" }}>\r\n              <Text strong style={{ fontSize: 40 }}>\r\n                Keep up-to-date\r\n              </Text>\r\n              <br />\r\n              <div style={{ height: 16 }} />\r\n\r\n              <Text style={{ fontSize: 24 }}>\r\n                Quickly catch up trendy technologies coming everyday and expand\r\n                your own knowledge.\r\n              </Text>\r\n            </div>\r\n            <div\r\n              data-aos=\"flip-left\"\r\n              className=\"col-lg-6\"\r\n              style={{ textAlign: \"left\" }}\r\n            >\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    height: isMobile ? 270 : 350,\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <img\r\n                    style={{ height: \"100%\" }}\r\n                    alt=\"bg-share\"\r\n                    src=\"https://i.ibb.co/bWpRkNt/sharepost.png\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"row\"\r\n            style={{\r\n              alignItems: \"center\",\r\n              marginBottom: 100,\r\n            }}\r\n          >\r\n            <div data-aos=\"flip-right\" className=\"col-lg-6 mb-4\">\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    height: isMobile ? 180 : 350,\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <img\r\n                    style={{ height: \"100%\" }}\r\n                    alt=\"bg-group\"\r\n                    src=\"https://i.ibb.co/QKFYSHm/group.png\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              data-aos=\"fade-left\"\r\n              className=\"col-lg-5 offset-1\"\r\n              style={{ textAlign: \"left\", paddingLeft: isMobile ? 0 : 90 }}\r\n            >\r\n              <Text strong style={{ fontSize: 40 }}>\r\n                Share experiences\r\n              </Text>\r\n              <br />\r\n              <div style={{ height: 16 }} />\r\n\r\n              <Text style={{ fontSize: 24 }}>\r\n                Openly show people your piece of code and tell them about your\r\n                programming stories.\r\n              </Text>\r\n            </div>\r\n          </div>\r\n          {loadingAll ? (\r\n            <HashTagsSelection />\r\n          ) : (\r\n            <div style={{ marginBottom: 18 }}>{/* <LoadingSearch /> */}</div>\r\n          )}\r\n        </div>\r\n        {/* {!isMobile ? <Footer /> : null} */}\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\components\\Navbar\\NotificationList\\NotificationList.js",["190","191","192","193","194","195","196","197","198","199"],"import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport { Modal, Typography, Menu, Tooltip, Tabs, Button, Avatar } from \"antd\";\r\nimport moment from \"moment\";\r\nimport COLOR from \"../../../constants/colors\";\r\n// import * as api from \"../../../api/notification\";\r\nimport { useDispatch } from \"react-redux\";\r\n// import { limitNameLength } from \"../../../utils/limitNameLength\";\r\n// import {\r\n//   refreshNotifications,\r\n//   setSeenNotification,\r\n// } from \"../../../redux/actions/notifications\";\r\n\r\nconst { Text } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\nfunction NotificationList({ handleClickNotificationItem, notifications }) {\r\n  // const [allNoti, setAllNoti] = useState([]);\r\n  // const [unseenNoti, setUnseenNoti] = useState([]);\r\n  // const [seenNoti, setSeenNoti] = useState([]);\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const unseenNotifications = useMemo(\r\n    () => notifications?.filter((item) => !item.seen),\r\n    [notifications]\r\n  );\r\n\r\n  const handleFetchNoti = useCallback(() => {\r\n    // api.fetchAllNotifications().then((res) => {\r\n    //   setAllNoti(res.data);\r\n    // });\r\n    // api.fetchSeenNotifications().then((res) => {\r\n    //   setSeenNoti(res.data);\r\n    // });\r\n    // api.fetchUnseenNotifications().then((res) => {\r\n    //   setUnseenNoti(res.data);\r\n    // });\r\n  }, []);\r\n\r\n  // const handleMarkAll = () => {\r\n  //   unseenNotifications?.forEach((item) => {\r\n  //     dispatch(setSeenNotification(item._id, \"true\"));\r\n  //   });\r\n  //   dispatch(refreshNotifications());\r\n  //   setIsUpdate(true);\r\n  //   Modal.destroyAll();\r\n  // };\r\n\r\n  useEffect(() => {\r\n    handleFetchNoti();\r\n  }, [handleFetchNoti]);\r\n\r\n  useEffect(() => {\r\n    if (isUpdate) {\r\n      handleFetchNoti();\r\n      setIsUpdate(false);\r\n    }\r\n  }, [isUpdate, handleFetchNoti]);\r\n\r\n  const NotiList = ({ noti }) => {\r\n    return (\r\n      <>\r\n        {noti?.length === 0 ? (\r\n          <div key=\"no-data-all\" className=\"whitegreen-button\">\r\n            <div className=\"justify-content-center align-items-center p-2 w-100\">\r\n              No data to show\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {noti?.map((item, i) => (\r\n              <div\r\n                key={`${item._id}-all`}\r\n                className=\"whitegreen-button clickable\"\r\n                onClick={() =>\r\n                  handleClickNotificationItem(item?.link, item?._id)\r\n                }\r\n              >\r\n                <div\r\n                  className=\"d-flex align-items-center p-2 w-100\"\r\n                  style={{\r\n                    backgroundColor: !item?.seen && COLOR.greenSmoke,\r\n                  }}\r\n                >\r\n                  {/* <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" /> */}\r\n                  <div className=\"d-flex ml-1 flex-column\">\r\n                    <Tooltip\r\n                      title={item.content?.description}\r\n                      placement=\"bottom\"\r\n                    >\r\n                      <Text>\r\n                        {/* {limitNameLength(item.content?.description, 54)} */}\r\n                      </Text>\r\n                    </Tooltip>\r\n\r\n                    <Text type=\"secondary\">\r\n                      {moment(item?.createdAt).fromNow()}\r\n                    </Text>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  function seeAllNoti() {\r\n    Modal.info({\r\n      title: \"Updated news\",\r\n      content: (\r\n        <div>\r\n          <Tabs defaultActiveKey=\"1\" size=\"small\" style={{ marginBottom: 32 }}>\r\n            <TabPane tab=\"Unseen\" key=\"1\">\r\n              <NotiList noti={unseenNotifications} />\r\n            </TabPane>\r\n            {/* <TabPane tab=\"Seen\" key=\"2\">\r\n              <NotiList noti={seenNoti} />\r\n            </TabPane> */}\r\n            <TabPane tab=\"All\" key=\"3\">\r\n              <NotiList noti={notifications} />\r\n            </TabPane>\r\n          </Tabs>\r\n          <Button className=\"green-button\">Mark all as read</Button>\r\n        </div>\r\n      ),\r\n      okButtonProps: { style: { display: \"none\" } },\r\n      closable: true,\r\n      onOk() {},\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Menu>\r\n      {unseenNotifications?.length === 0 ? (\r\n        <Menu.Item key=\"no-data\" className=\"whitegreen-button\">\r\n          <div className=\"justify-content-center align-items-center p-2 w-100\">\r\n            No data to show\r\n          </div>\r\n        </Menu.Item>\r\n      ) : (\r\n        <>\r\n          {unseenNotifications?.slice(0, 5).map((item, i) => (\r\n            <Menu.Item\r\n              key={item._id}\r\n              className=\"whitegreen-button\"\r\n              onClick={() => handleClickNotificationItem(item?.link, item?._id)}\r\n            >\r\n              <div\r\n                className=\"d-flex align-items-center p-2 w-100\"\r\n                style={{ backgroundColor: !item?.seen && COLOR.greenSmoke }}\r\n              >\r\n                {/* <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" /> */}\r\n                <div className=\"d-flex ml-1 flex-column\">\r\n                  <Tooltip title={item.content?.description} placement=\"bottom\">\r\n                    <Text>\r\n                      {/* {limitNameLength(item.content?.description, 54)} */}\r\n                    </Text>\r\n                  </Tooltip>\r\n\r\n                  <Text type=\"secondary\">\r\n                    {moment(item?.createdAt).fromNow()}\r\n                  </Text>\r\n                </div>\r\n              </div>\r\n            </Menu.Item>\r\n          ))}\r\n        </>\r\n      )}\r\n      <Menu.Item onClick={() => seeAllNoti()}>\r\n        <div className=\"text-center\">\r\n          <Text strong>See all notifications</Text>\r\n        </div>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default NotificationList;\r\n","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\pages\\HomePage\\styles.js",[],"E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\pages\\RegisterPage\\styles.js",["200"],"import COLOR from \"../../constants/colors\";\r\n\r\nconst styles = {\r\n  formItem: {\r\n    marginBottom: 12,\r\n  },\r\n};\r\n\r\nexport default styles;\r\n","E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\constants\\colors.js",[],"E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\constants\\config.js",[],"E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\utils\\responsiveQuery.js",[],"E:\\HOCTAP\\Nam4\\DA2\\DA2\\Toeists\\client\\src\\utils\\userStatus.js",[],{"ruleId":"201","severity":2,"message":"202","line":24,"column":10,"nodeType":"203","messageId":"204","endLine":24,"endColumn":23},{"ruleId":"205","severity":2,"message":"206","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":26},{"ruleId":"205","severity":2,"message":"209","line":6,"column":3,"nodeType":"207","messageId":"208","endLine":6,"endColumn":17},{"ruleId":"205","severity":2,"message":"210","line":10,"column":3,"nodeType":"207","messageId":"208","endLine":10,"endColumn":23},{"ruleId":"205","severity":2,"message":"211","line":19,"column":3,"nodeType":"207","messageId":"208","endLine":19,"endColumn":23},{"ruleId":"205","severity":2,"message":"212","line":21,"column":3,"nodeType":"207","messageId":"208","endLine":21,"endColumn":22},{"ruleId":"205","severity":2,"message":"213","line":39,"column":10,"nodeType":"207","messageId":"208","endLine":39,"endColumn":21},{"ruleId":"205","severity":2,"message":"214","line":40,"column":10,"nodeType":"207","messageId":"208","endLine":40,"endColumn":17},{"ruleId":"205","severity":2,"message":"215","line":41,"column":13,"nodeType":"207","messageId":"208","endLine":41,"endColumn":20},{"ruleId":"205","severity":2,"message":"216","line":54,"column":17,"nodeType":"207","messageId":"208","endLine":54,"endColumn":25},{"ruleId":"217","severity":2,"message":"218","line":54,"column":29,"nodeType":"207","messageId":"219","endLine":54,"endColumn":37},{"ruleId":"205","severity":2,"message":"220","line":58,"column":11,"nodeType":"207","messageId":"208","endLine":58,"endColumn":27},{"ruleId":"217","severity":2,"message":"221","line":58,"column":32,"nodeType":"207","messageId":"219","endLine":58,"endColumn":44},{"ruleId":"205","severity":2,"message":"222","line":1,"column":8,"nodeType":"207","messageId":"208","endLine":1,"endColumn":13},{"ruleId":"223","severity":2,"message":"224","line":15,"column":40,"nodeType":"225","messageId":"226","endLine":15,"endColumn":49},{"ruleId":"223","severity":2,"message":"227","line":15,"column":51,"nodeType":"225","messageId":"226","endLine":15,"endColumn":56},{"ruleId":"223","severity":2,"message":"228","line":15,"column":58,"nodeType":"225","messageId":"226","endLine":15,"endColumn":66},{"ruleId":"223","severity":2,"message":"229","line":15,"column":68,"nodeType":"225","messageId":"226","endLine":15,"endColumn":83},{"ruleId":"205","severity":2,"message":"230","line":1,"column":25,"nodeType":"207","messageId":"208","endLine":1,"endColumn":32},{"ruleId":"205","severity":2,"message":"206","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":26},{"ruleId":"205","severity":2,"message":"231","line":10,"column":3,"nodeType":"207","messageId":"208","endLine":10,"endColumn":9},{"ruleId":"205","severity":2,"message":"232","line":33,"column":8,"nodeType":"207","messageId":"208","endLine":33,"endColumn":14},{"ruleId":"205","severity":2,"message":"233","line":50,"column":10,"nodeType":"207","messageId":"208","endLine":50,"endColumn":22},{"ruleId":"223","severity":2,"message":"234","line":58,"column":19,"nodeType":"225","messageId":"226","endLine":58,"endColumn":31},{"ruleId":"223","severity":2,"message":"235","line":58,"column":33,"nodeType":"225","messageId":"226","endLine":58,"endColumn":45},{"ruleId":"223","severity":2,"message":"236","line":58,"column":47,"nodeType":"225","messageId":"226","endLine":58,"endColumn":60},{"ruleId":"205","severity":2,"message":"237","line":65,"column":9,"nodeType":"207","messageId":"208","endLine":65,"endColumn":17},{"ruleId":"205","severity":2,"message":"238","line":71,"column":9,"nodeType":"207","messageId":"208","endLine":71,"endColumn":15},{"ruleId":"205","severity":2,"message":"239","line":94,"column":9,"nodeType":"207","messageId":"208","endLine":94,"endColumn":25},{"ruleId":"217","severity":2,"message":"240","line":100,"column":24,"nodeType":"207","messageId":"219","endLine":100,"endColumn":51},{"ruleId":"217","severity":2,"message":"240","line":109,"column":9,"nodeType":"207","messageId":"219","endLine":109,"endColumn":36},{"ruleId":"217","severity":2,"message":"240","line":176,"column":15,"nodeType":"207","messageId":"219","endLine":176,"endColumn":42},{"ruleId":"205","severity":2,"message":"241","line":347,"column":32,"nodeType":"207","messageId":"208","endLine":347,"endColumn":55},{"ruleId":"217","severity":2,"message":"242","line":418,"column":10,"nodeType":"207","messageId":"219","endLine":418,"endColumn":14},{"ruleId":"205","severity":2,"message":"243","line":1,"column":14,"nodeType":"207","messageId":"208","endLine":1,"endColumn":20},{"ruleId":"205","severity":2,"message":"244","line":1,"column":16,"nodeType":"207","messageId":"208","endLine":1,"endColumn":22},{"ruleId":"205","severity":2,"message":"245","line":49,"column":50,"nodeType":"207","messageId":"208","endLine":49,"endColumn":58},{"ruleId":"205","severity":2,"message":"245","line":71,"column":46,"nodeType":"207","messageId":"208","endLine":71,"endColumn":54},{"ruleId":"205","severity":2,"message":"246","line":10,"column":3,"nodeType":"207","messageId":"208","endLine":10,"endColumn":11},{"ruleId":"205","severity":2,"message":"247","line":17,"column":20,"nodeType":"207","messageId":"208","endLine":17,"endColumn":30},{"ruleId":"205","severity":2,"message":"248","line":19,"column":10,"nodeType":"207","messageId":"208","endLine":19,"endColumn":16},{"ruleId":"205","severity":2,"message":"249","line":41,"column":9,"nodeType":"207","messageId":"208","endLine":41,"endColumn":17},{"ruleId":"205","severity":2,"message":"250","line":48,"column":9,"nodeType":"207","messageId":"208","endLine":48,"endColumn":24},{"ruleId":"205","severity":2,"message":"251","line":76,"column":9,"nodeType":"207","messageId":"208","endLine":76,"endColumn":21},{"ruleId":"205","severity":2,"message":"252","line":81,"column":9,"nodeType":"207","messageId":"208","endLine":81,"endColumn":27},{"ruleId":"205","severity":2,"message":"253","line":91,"column":11,"nodeType":"207","messageId":"208","endLine":91,"endColumn":17},{"ruleId":"205","severity":2,"message":"254","line":92,"column":11,"nodeType":"207","messageId":"208","endLine":92,"endColumn":16},{"ruleId":"217","severity":2,"message":"255","line":265,"column":38,"nodeType":"207","messageId":"219","endLine":265,"endColumn":55},{"ruleId":"205","severity":2,"message":"256","line":19,"column":8,"nodeType":"207","messageId":"208","endLine":19,"endColumn":14},{"ruleId":"205","severity":2,"message":"257","line":74,"column":25,"nodeType":"207","messageId":"208","endLine":74,"endColumn":31},{"ruleId":"205","severity":2,"message":"258","line":151,"column":24,"nodeType":"207","messageId":"208","endLine":151,"endColumn":37},{"ruleId":"205","severity":2,"message":"258","line":178,"column":24,"nodeType":"207","messageId":"208","endLine":178,"endColumn":37},{"ruleId":"205","severity":2,"message":"258","line":291,"column":28,"nodeType":"207","messageId":"208","endLine":291,"endColumn":41},{"ruleId":"205","severity":2,"message":"259","line":2,"column":26,"nodeType":"207","messageId":"208","endLine":2,"endColumn":31},{"ruleId":"205","severity":2,"message":"256","line":3,"column":8,"nodeType":"207","messageId":"208","endLine":3,"endColumn":14},{"ruleId":"205","severity":2,"message":"260","line":10,"column":10,"nodeType":"207","messageId":"208","endLine":10,"endColumn":14},{"ruleId":"205","severity":2,"message":"261","line":23,"column":9,"nodeType":"207","messageId":"208","endLine":23,"endColumn":14},{"ruleId":"205","severity":2,"message":"262","line":24,"column":7,"nodeType":"207","messageId":"208","endLine":24,"endColumn":18},{"ruleId":"205","severity":2,"message":"263","line":26,"column":10,"nodeType":"207","messageId":"208","endLine":26,"endColumn":14},{"ruleId":"217","severity":2,"message":"264","line":26,"column":18,"nodeType":"207","messageId":"219","endLine":26,"endColumn":33},{"ruleId":"205","severity":2,"message":"265","line":32,"column":23,"nodeType":"207","messageId":"208","endLine":32,"endColumn":37},{"ruleId":"205","severity":2,"message":"266","line":34,"column":10,"nodeType":"207","messageId":"208","endLine":34,"endColumn":21},{"ruleId":"223","severity":2,"message":"267","line":93,"column":21,"nodeType":"225","messageId":"226","endLine":93,"endColumn":26},{"ruleId":"205","severity":2,"message":"231","line":2,"column":58,"nodeType":"207","messageId":"208","endLine":2,"endColumn":64},{"ruleId":"223","severity":2,"message":"268","line":16,"column":29,"nodeType":"225","messageId":"226","endLine":16,"endColumn":56},{"ruleId":"223","severity":2,"message":"269","line":16,"column":58,"nodeType":"225","messageId":"226","endLine":16,"endColumn":71},{"ruleId":"205","severity":2,"message":"249","line":22,"column":9,"nodeType":"207","messageId":"208","endLine":22,"endColumn":17},{"ruleId":"223","severity":2,"message":"270","line":25,"column":26,"nodeType":"207","messageId":"226","endLine":25,"endColumn":32},{"ruleId":"223","severity":2,"message":"271","line":61,"column":23,"nodeType":"225","messageId":"226","endLine":61,"endColumn":27},{"ruleId":"223","severity":2,"message":"272","line":64,"column":16,"nodeType":"207","messageId":"226","endLine":64,"endColumn":22},{"ruleId":"223","severity":2,"message":"273","line":72,"column":20,"nodeType":"207","messageId":"226","endLine":72,"endColumn":23},{"ruleId":"205","severity":2,"message":"274","line":72,"column":31,"nodeType":"207","messageId":"208","endLine":72,"endColumn":32},{"ruleId":"205","severity":2,"message":"274","line":145,"column":56,"nodeType":"207","messageId":"208","endLine":145,"endColumn":57},{"ruleId":"205","severity":2,"message":"222","line":1,"column":8,"nodeType":"207","messageId":"208","endLine":1,"endColumn":13},"react/jsx-no-undef","'TokenProvider' is not defined.","JSXIdentifier","undefined","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'CreatePostPage' is defined but never used.","'UserResultSearchPage' is defined but never used.","'FriendManagementPage' is defined but never used.","'GroupManagementPage' is defined but never used.","'useDispatch' is defined but never used.","'getUser' is defined but never used.","'apiAuth' is defined but never used.","'setToken' is assigned a value but never used.","no-undef","'useToken' is not defined.","undef","'updateListGroups' is assigned a value but never used.","'groupsOfUser' is not defined.","'COLOR' is defined but never used.","react/prop-types","'serverUri' is missing in props validation","Property","missingPropType","'token' is missing in props validation","'children' is missing in props validation","'onNewConnection' is missing in props validation","'message' is defined but never used.","'Avatar' is defined but never used.","'decode' is defined but never used.","'renderStatus' is defined but never used.","'selectedMenu' is missing in props validation","'setTxtSearch' is missing in props validation","'txtInitSearch' is missing in props validation","'location' is assigned a value but never used.","'cuteIO' is assigned a value but never used.","'openNotification' is assigned a value but never used.","'handleClickNotificationItem' is not defined.","'setNumberUnseenMessages' is assigned a value but never used.","'user' is not defined.","'Socket' is defined but never used.","'LOGOUT' is defined but never used.","'dispatch' is defined but never used.","'Checkbox' is defined but never used.","'GrFacebook' is defined but never used.","'signin' is defined but never used.","'dispatch' is assigned a value but never used.","'setDisableLogin' is assigned a value but never used.","'handleResend' is assigned a value but never used.","'handleFinishFailed' is assigned a value but never used.","'result' is assigned a value but never used.","'token' is assigned a value but never used.","'handleLoginGithub' is not defined.","'styles' is defined but never used.","'values' is defined but never used.","'getFieldValue' is defined but never used.","'Image' is defined but never used.","'Link' is defined but never used.","'Title' is assigned a value but never used.","'pagePadding' is assigned a value but never used.","'user' is assigned a value but never used.","'useLocalStorage' is not defined.","'setLoadingTags' is assigned a value but never used.","'selectedTag' is assigned a value but never used.","'title' is missing in props validation","'handleClickNotificationItem' is missing in props validation","'notifications' is missing in props validation","'notifications.filter' is missing in props validation","'noti' is missing in props validation","'noti.length' is missing in props validation","'noti.map' is missing in props validation","'i' is defined but never used."]